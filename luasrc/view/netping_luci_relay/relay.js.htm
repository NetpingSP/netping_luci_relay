<% util = require "luci.util" %>
<% local sys = require "luci.sys" %>

<script type="text/javascript">
//<![CDATA[

function add_relay() {
	var action = "add",
		relay_id = null,
		payload = {"relay_data": {}, "globals_data": {}, "adapter_data": {}};
	send_action(action, relay_id, payload);
}

function delete_relay(btn) {
	var action = "delete",
		relay_id = btn.getAttribute("data-relay"),
		payload = {"relay_data": {}, "globals_data": {}, "adapter_data": {}};
	send_action(action, relay_id, payload);
}

function switch_relay(btn) {
	var action = "switch",
		relay_id = btn.getAttribute("data-relay"),
		payload = {"relay_data": {}, "globals_data": {}, "adapter_data": {}};
	send_action(action, relay_id, payload);
}

function rename_relay(inp) {
	var action = "rename",
		relay_id = inp.getAttribute("data-relay"),
		new_name = inp.value,
		payload = {};


	L.require("uci").then(function(uci) {
		uci.load("settings").then(function(out){
			var all_relays = uci.sections("settings", "relay") || [];
			var found = false;
			for (var r of all_relays) {
				if(r[".name"] != "prototype" && r[".name"] != relay_id) {
					for (var key in r) {
						if(key == "name" && r[key] == new_name){
							// SHOW NOTIFICATION
							inp.classList.add("cbi-input-invalid");
							var tooltip = document.getElementById(relay_id);
							tooltip.style.display = "block";
							found = true;
							break;
						}
					}
				}
				if(found) break;
			}
			if(!found) {
				// DO RENAME ACTION
				var tooltip = document.getElementById(relay_id);
				if(tooltip) tooltip.style.display = "none";
				inp.classList.remove("cbi-input-invalid");

				payload = {"relay_data": {"name": new_name}, "globals_data": {}, "adapter_data": {}};
				send_action(action, relay_id, payload);
			}
		})
	})
}

// TODO
// XHR() is deprecated. Use L.request instead.
function send_action(action, relay_id, payload) {
	var xhr = new XHR(false);
	var btn_spinner = document.getElementById("btn_enable_spinner");;
	spinner(btn_spinner, 1);
	xhr.post('<%=luci.dispatcher.build_url("admin", "system", "relay", "action")%>/'+ '%h/%h'.format(action, relay_id), payload,
		function (x) {
			if (!x) {
				return;
			}
			spinner(btn_spinner, 0);
			location.assign('<%=luci.dispatcher.build_url("admin", "system", "relay")%>');
		}
	);
}


// It is required to handle "Enter" key while editing Relay name
// This function disable general form submit from Enter pressing
window.addEventListener('keydown',function(e) {
	if(e.target.name=="relay_name") {
		var relay_id = e.target.getAttribute("data-relay");
		var tooltip = document.getElementById(relay_id);
		tooltip.style.display = "none";
		e.target.classList.remove("cbi-input-invalid");
		if(e.keyIdentifier=='U+000A'||e.keyIdentifier=='Enter'||e.keyCode==13) {
			if(e.target.nodeName=='INPUT'&&e.target.type=='text') { 
				e.preventDefault();
				rename_relay(e.target)
				return false;
			}
		}
	}
},true);


function toggle_more(ev) {
	var extra_params = document.querySelector(".more-params");
	var btn = ev.target;
	if(btn.getAttribute("data-action") == "show") {
		extra_params.style.display = "block";
		btn.setAttribute("data-action", "hide")
		btn.innerHTML = "Основные параметры"
	} else if(btn.getAttribute("data-action") == "hide") {
		extra_params.style.display = "none";
		btn.setAttribute("data-action", "show")
		btn.innerHTML = "Дополнительные параметры"
	}
}

function spinner(element, state) {
	if (state === 1) {
		element.style.width = "16px";
		element.innerHTML = '<img src="<%=resource%>/icons/loading.gif" alt="<%:Loading%>" width="16" height="16" style="vertical-align:middle" />';
	}
	else {
		element.style.width = "0px";
		element.innerHTML = '';
	}
}

//]]>
</script>